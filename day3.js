const input = [
  '.#..........#...#...#..#.......',
  '.###...#.#.##..###..#...#...#..',
  '#.....#................#...#.#.',
  '#.....#..###.............#....#',
  '......#.....#....#...##.....###',
  '....#........#.#......##....#.#',
  '..#.......##..#.#.#............',
  '#.............#..#...#.#...#...',
  '.#...........#.#....#..##......',
  '......#..##..#....#....#...##..',
  '....#.##.#####..#.##..........#',
  '..#.#......#.#.#....#.....#....',
  '...###.##......#..#.#...#...#..',
  '...#..#.#..#..#.......#........',
  '...#....#..#...........#.#.....',
  '....#.........###.#....#...#...',
  '....#..##.....#.##....##.#.....',
  '........#.#.#.....#........#...',
  '..#..#.....#.#...#.#...#.#.....',
  '....#..........#....#....#...##',
  '.##...#..#...##....#..#.#....#.',
  '.#....##..#...#................',
  '..#.###.........#.###.....#....',
  '....#..#.......###.#...........',
  '#...#...#.#...........#.#......',
  '.#..#.......##.....##...#......',
  '....####.#..#.#.#...........#..',
  '.##...#..#..#.#....##.....#..##',
  '...#......##....#...#.#.###....',
  '##.#...........#.........#...#.',
  '...........#...#...........##..',
  '.....#....#...........#........',
  '...#..#.........#...#....#.##..',
  '.....##.........#...#........##',
  '....#....#..#.#...#...##.#.....',
  '...#.#..#...#...........#..#...',
  '.....#.#.....#....#...#....#...',
  '.#.............#..##..........#',
  '..........#......#..##.....###.',
  '..#....#........#.#.....##...#.',
  '#..#......#.#.##......#.#.##...',
  '.....#..#.........#...#.#.#.#.#',
  '#.#...#.......#.#..##.##.....##',
  '.....#......##......#.......#..',
  '#.....#...##.#.#........#......',
  '#..........#.#...#.......#.....',
  '..#..#........#........#.......',
  '...#....#....#..####.#....#...#',
  '#.............#.....##....#..#.',
  '##....#.....###..##....#......#',
  '#.....#...#.#.............#....',
  '.#.#..##..##.#..#....#.#.#...#.',
  '.#...#..#.....#..#.#.#..#...##.',
  '..#.#.#.#.#.#....##...#........',
  '.......##.....#..........#...#.',
  '...#..#...#...........#....#...',
  '.....#..#....#..#.##...#.......',
  '..##..#.......#.#..#....#......',
  '...#...............#.#..#......',
  '....#........#...#....#...#.#..',
  '...#...#..........##....##.#...',
  '..###.#.##.............#..#.#.#',
  '##.......##.#..#.#.#.....#.#.#.',
  '..#####...#......##...#........',
  '...#.##...#................#..#',
  '..#......#...#....#.#..##..#...',
  '#.#.........#............#.....',
  '##.............#.#.....#......#',
  '....#.......#..#..##....#.#....',
  '...#...##....#.........#..#....',
  '...####.....#...........#....#.',
  '#.#........##....#..#..#...#...',
  '....#.#.###..........#........#',
  '#.#......#.....#.##....#.#...#.',
  '#....##.#..##..#.#.............',
  '.#.....##..#..................#',
  '...#.#........#...#.#........#.',
  '..#....#......#.....##........#',
  '....#...#....#...#.....#.##....',
  '...#........#.......##.........',
  '.#.##......#......#....##......',
  '.#...#...###.#............#..#.',
  '.#...........#.#.#....#...#..#.',
  '.#.....#....#.....#...#........',
  '.#..#.....#............#.#.##.#',
  '...###.#.............#..##.....',
  '...#.#.##.#..#..........#..#...',
  '.#.#.#....#..#...............##',
  '.......#.#..#...#.#.#........#.',
  '....#.#...#..##....#........#.#',
  '..........#...#.......#..#....#',
  '...###.....#.#....#.....##.....',
  '#......#..#..#........#.#...#..',
  '#......#....#..#.#.............',
  '...#....#........#...#..#......',
  '...#..###........#.#.........##',
  '#......#.#..###..#........###..',
  '.#.#......#.#..#.#.#.#.....#..#',
  '#....#.....#..##.....#.........',
  '....#......#...#..#..#.#.##.#..',
  '........#.#...#...#..#...#.#..#',
  '.....##........#...#....#...#..',
  '....#...##..#........#....##.#.',
  '...............#.....#......##.',
  '..##.....#.....#.#.............',
  '.....#.#...........##.#.....#..',
  '.#..##..#.##.#...##.#....#....#',
  '.##.....#.##......#....#..#..#.',
  '.......#.##......#....#...#.#..',
  '.#........#......#...##.#....#.',
  '.........#..........#.......###',
  '#.#.........#..#..#....#...#...',
  '.......#.........#......#.#.#..',
  '.......#...........#....#....#.',
  '.###...##.#.#..........#...#..#',
  '....#.....#...#..#.............',
  '.......##........#..#.......#..',
  '....##..#.#....#....#..#...#..#',
  '..#.####.....#.........#.#....#',
  '..............#.#..#.....#...#.',
  '.....#.............#..........#',
  '..##.#...#.....#....#.#....##..',
  '.#...#.......#..####..#..#...#.',
  '#..........#................##.',
  '......##.....#.................',
  '..##...#.#..........##.#...#...',
  '....#.#.#.#...##...#...#...####',
  '.............##..#.###...#.....',
  '#.#....#.#..#..##........#..##.',
  '.....#.#...............#.......',
  '...#..##......#..##...........#',
  '#..#....#...........##..#......',
  '.##....#.#....###.......#..#...',
  '.....#..#.#....##...#......#...',
  '.#.........#####......#...#...#',
  '.......#.#.....#.....#.......#.',
  '#....#.......###.......#..#....',
  '#......##.###...#.......#......',
  '.......#...#......#....#..#....',
  '.#.####.......#...#.##.........',
  '................##.#......#....',
  '......##....#.#......#......#..',
  '....##...##....#.........#.....',
  '......#.#..............##.#...#',
  '....#.#......#.#.............#.',
  '.#.#..####...#................#',
  '....#.#.#.#......##...##......#',
  '.....#.#..#......#....#......#.',
  '..........#.#.....#.......#...#',
  '..##......##.#...##.#......#..#',
  '...#............#..#...###.....',
  '.#.#..###..#.......##...#.....#',
  '.#....#.#.......#.....##....#..',
  '#.............###...##.#.#...#.',
  '#........#.#........#.#...#.#.#',
  '##..#.................#....#...',
  '...#.#...#..#.#..##....#...#...',
  '#.....#.......#..............#.',
  '.......###...##..#.....#.......',
  '#.#.........#..#.#.........#...',
  '.#.#............#.....##.....#.',
  '........#....#....#.......#....',
  '...#.#....#..#.##....#.#......#',
  '.#.....#.#..#...........#.#.#..',
  '#......#..#......##.#.#.#.#..#.',
  '.......#.#..#......#.#.#..#.#.#',
  '..........#...#..........#.##..',
  '.#.#..####.......#..........#..',
  '......#.#.....#..#..#..#.....#.',
  '.....##..#.#.#..#..#...#.....##',
  '............#.#....#.#....#....',
  '..............#..#...#...#.....',
  '.....#......#.......#.....#....',
  '..##....#..#...........#..##...',
  '###...#.##..#.#...####....###..',
  '..#.#.....#.........#....#..###',
  '##...........##.............#..',
  '....##..............#.........#',
  '...#...##....#.#..#...##.....#.',
  '..#..##...#.......#..#..#.....#',
  '...#...#....####........##.#...',
  '....#........#..#.#.........#..',
  '.#..........#...#..#.#.#......#',
  '....#.#.....#.........#....#...',
  '...#....#...##.......#...#.....',
  '....#..#.......#.##.##.##...#..',
  '##....##........#........##....',
  '.#.#..#...........#.....#...#..',
  '...#.##...##..#...#...##.......',
  '.....#..###................#.#.',
  '...#........##.#....##.....#.##',
  '...#...#..##...#...#.#...#.....',
  '.#......#...#..#.##.......#...#',
  '.....#.......###.##...#........',
  '#.....#..#........##.##.#.##..#',
  '....#..............##.##...#...',
  '#..........#..................#',
  '..##.......#..........#..#..##.',
  '.#....###.#..#.........###....#',
  '.#....#.##..............#.##.##',
  '.#.##.#....#.......#.#......#..',
  '.#............#.#.....#........',
  '..#......#.......#.............',
  '#.#...#........##...#.#......#.',
  '....#.........#........##..#...',
  '..........##.....#.#......#....',
  '.##.#..#....#.......#...#...##.',
  '.#................#...#.##.....',
  '....###.......#..#..#.........#',
  '.#.....#..##...###......#.....#',
  '.#.##..........#..#..#........#',
  '.......#.##..............#...##',
  '#...#.#.#.......#..#......#.##.',
  '.#....#.#......#...#..........#',
  '.....#........##....#.##.....#.',
  '.#....................#..#.#.#.',
  '.....#.........#....#.......#.#',
  '.....#.#..##..#.....#..#.......',
  '...#..#..#...#.....#....#....#.',
  '#.....#.#.#..........#..#.#.#..',
  '.....##..##.....#.#..#.........',
  '#.#..##....##......##...#.##..#',
  '..##..#.....#..#..........##...',
  '......#.#...#..#.......##.....#',
  '..#.#.......#.#......#.........',
  '.....#........##..#.....####.#.',
  '.#.....#........#.......#..##..',
  '......#...#....#.##...#.......#',
  '..##..................#..#.....',
  '.....###.#..##...#.............',
  '...##...##...#......#....#....#',
  '#........#.#..........##..#....',
  '#........#....#..........#...#.',
  '...##.#.##..#...##......#......',
  '#........##....#.#..##.....#..#',
  '...####......#..#......#.#.....',
  '.#......#...#...#.#.....##....#',
  '.....###..##..#...#..........##',
  '##.##....#...#.................',
  '...##.#.......#.###......#..#..',
  '.....#.#.#.......#.......#..#.#',
  '#...#...#.##..#....###.......#.',
  '.#.#..##.....#....#...##.......',
  '.....#..........#....#...#.##..',
  '..........#....#...#...........',
  '.#....#..#...#...#.......#....#',
  '#..#..............#.....####.##',
  '.......#....###....#....#.#.#..',
  '###.#........##.#.......#......',
  '#..#...#..#......#.............',
  '#...###..#...#..#..##.#.###.#..',
  '..#..#...##......##............',
  '.#..#.......#..###..##...#.....',
  '....#..#..##.#.#.....##...#.#.#',
  '....#....#.....#..#....#.......',
  '..##..#....#.#...##..#.........',
  '.....#....#...........#.#......',
  '...#........#.#..#..#......#..#',
  '.#...##....#....#.#.##......#.#',
  '..#...........#..###.##.....#..',
  '.#.######.#..##.......#..#.....',
  '.....#..#......##.#.#...#......',
  '....#....#..#.....#.......#.#.#',
  '.....#........##.....#.....#.##',
  '........#....#...#...#.#.#...#.',
  '...#.#.....#...........#.....#.',
  '#.#.#...###......#.....#.....#.',
  '.#..........#.....#.......##...',
  '#................#.#.....#.####',
  '.#......#......#.#..##.#.##....',
  '..........#....#...........###.',
  '.##....#..####..#####..........',
  '##.......##............#.....#.',
  '...#.....#...#....#.......#....',
  '.#....##......#.#...#....#.....',
  '....#............##..........#.',
  '.#....#....#.....#.#...........',
  '.............##.#.##...#.#.#...',
  '..#............#.#..##.#....##.',
  '#.....#...##..........#.#.#...#',
  '......#............#..........#',
  '..##..#.....#........#.##..#..#',
  '#..#.#..##.#.....##.#..........',
  '#..#...#.#..#......##.......##.',
  '.##......#...........##.....#..',
  '...#.....#.....#..#....#.......',
  '.....#...............#........#',
  '.......#.....##..#..##..#.#.#..',
  '#.#.....#..#..........##...#...',
  '#..#......#.................#.#',
  '.##...#....#...#...#.......#...',
  '.#........##........#..........',
  '........#..........#.........#.',
  '.....#.##..#.......#........#..',
  '..##..#..#...##..#.#....#......',
  '......#........#.##.....#.#....',
  '.#...#.#.........#..#.#.#.#..#.',
  '.#..#.#...#............#.#..#..',
  '....#.................#...#..##',
  '.........##.....#.#.#......####',
  '...............#....##.#.#.....',
  '....##..#....#......#....#.....',
  '....##.#...#....#.#..#...#..#..',
  '..##......#.#..#........#.#.#..',
  '.........#.#................##.',
  '##.....#.....##..##.#........#.',
  '###....#..#..#..#..#.##..##.#..',
  '.....##..#...........##..#.#...',
  '....#..#..#..#....#...#.#....#.',
  '#....#............#..#....###..',
  '....#..#.............#....##.#.',
  '...#.................#...#.....',
  '.##...#....#..#..#........#....',
  '...#.#..#...#.#......#....#....',
  '...#.......##..........#...#.#.',
  '...##..#.......#........#...#..',
  '.....#.#.#....#..##......##...#',
  '....##......#........##....##..',
  '..#..........#.#.##.....#......',
  '..................#..#..#..###.',
  '.#..............#.#..#.#..#.###',
  '..#....#....#......#..##..#...#',
  '#.........#..#..#...........#..'
]

// generic helpers
const equals = a => b => a === b
const filter = predicate => (arr = []) => arr.filter(predicate)
const len = (arr = []) => arr.length
const map = mapper => (arr = []) => arr.map(mapper)
const pipe = (...fns) => x => fns.reduce((g, f) => f(g), x)
const reduce = reducer => initial => (arr = []) => arr.reduce(reducer, initial)
const sum = (a, b) => a * b
const tail = ([, ...rest]) => rest

// implementation helpers
const isTree = equals('#')
const moveHorizontally = offset => (line, verticalPosition) => line[(verticalPosition * offset) % line.length]
const moveVertically = offset => filter((_, i) => i % offset === 0)

// wiring
const traverse = ([hOffset, vOffset]) => pipe(
  moveVertically(vOffset),
  map(moveHorizontally(hOffset)),
  tail,
  filter(isTree),
  len
)
const traverseAll = slopes => grid => pipe(map(slope => traverse(slope)(grid)), reduce(sum)(1))(slopes)

const solvePart1 = traverse([3, 1])
const solvePart2 = traverseAll([[1, 1], [3, 1], [5, 1], [7, 1], [1, 2]])

console.log('solution for part 1:', solvePart1(input))
console.log('solution for part 2:', solvePart2(input))
